[England.university]
  name = "University of London"
  country = "United Kingdom"
  [England.university.department]
    name = "Department of Electrical Engineering"
    students = 2750
    subjects = ["Mathematics","Control Systems","Power Systems"]
[Portugal.university]
  name = "Universidade do Minho"
  country = "Portugal"
  [Portugal.university.department]
    name = "Departamento de Informática"
    students = 3050
    subjects = ["Matemática","Engenharia","Informática"]

# Outros assuntos .........

[Arrays]

arr1 = [ 1, 2, 3 ]
arr2 = [ "red", "yellow", "green" ]
arr3 = [ [ 1, 2 ], [3, 4, 5] ]
arr4 = [ "all", 'strings', "are the same", 'type']
arr5 = [ [ 1, 2 ], ["a", "b", "c"] ]


# Exemplo seguinte mais complexo...



# Settings in the [build] context are global and are applied to all contexts
# unless otherwise overridden by more specific contexts.
[build]
  # Directory to change to before starting a build.
  # This is where we will look for package.json/.nvmrc/etc.
  base = "project/"

  # Directory that contains the deploy-ready HTML files and assets generated by
  # the build. This is relative to the base directory if one has been set, or the
  # root directory if a base has not been set. This sample publishes the
  # directory located at the absolute path "root/project/build-output"
  publish = "build-output/"

  # Default build command.
  command = "echo default context"

  # Directory with the serverless Lambda functions to deploy to AWS.
  functions = "functions/"

# Production context: all deploys from the Production branch set in your site's
# deploy contexts will inherit these settings.
[context.production]
  publish = "output/"
  command = "make publish"

# Deploy Preview context: all deploys generated from a pull/merge request will
# inherit these settings.
[context.deploy-preview]
  publish = "dist/"

# Here is another way to define context specific environment variables.
[context.deploy-preview.environment]
  ACCESS_TOKEN = "not so secret"

# Branch Deploy context: all deploys that are not from a pull/merge request or
# from the Production branch will inherit these settings.
[context.branch-deploy]
  command = "echo branch"
[context.branch-deploy.environment]
  NODE_ENV = "development"

# Specific branch context: all deploys from this specific branch will inherit
# these settings.
[context.staging] # 'staging' is a branch name
  command = "echo staging"
  base = "staging"

# For contexts of branches with special characters, enclose the branch name
# with quotes.
[context."feat/branch"]
  command = "echo special branch"
  base = "branch"

# Redirects and headers are GLOBAL for all builds – they do not get scoped to
# contexts no matter where you define them in the file.
# For context-specific rules, use _headers or _redirects files, which are
# PER-DEPLOY.

  # The default HTTP status code is 301, but you can define a different one.
  status = 302

  # By default, redirects won't be applied if there's a file with the same
  # path as the one defined in the `from` property. Setting `force` to `true`
  # will make the redirect rule take precedence over any existing files.
  force = true

  # Sign each request with a value defined in an environment variable
  signed = "API_SIGNATURE_TOKEN"

  # You can also define custom headers within your redirects blocks.
  [redirects.headers]
    X-From = "Netlify"
    X-Api-Key = "some-api-key-string"

  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode >> block"
    Content-Security-Policy = "frame-ancestors https://www.facebook.com"

    # Basic-Auth allows you to password protect your whole site.
    # This feature may not be available on all plans.
    Basic-Auth = "someuser:somepassword anotheruser:anotherpassword"

